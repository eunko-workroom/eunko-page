{"version":3,"sources":["globalStyle.ts","common/components/globalHeader/styled.ts","common/components/globalHeader/index.tsx","common/components/pageTemplate/styled.ts","common/components/image/styled.ts","common/components/image/index.tsx","common/components/pageTemplate/index.tsx","root.tsx","serviceWorker.ts","index.tsx"],"names":["createGlobalStyle","Wrapper","styled","div","Header","header","Main","props","margin","css","Logo","h1","MenuItem","span","selected","Nav","nav","GlobalAppBar","children","React","useState","menu","setMenu","handleLogoClick","useCallback","handlePhotographyMenuClick","handleEditorialMenuClick","handleMoreMenuClick","photographyRef","useRef","editorialRef","moreRef","getMainPosition","current","offsetLeft","onClick","to","ref","ImageWrapper","Image","Content","LeftButton","RightButton","ButtonWrapper","Title","Text","SubTitle","Date","Size","Feature","ImageController","images","handleNext","handlePrev","map","image","PageTemplate","selectedImages","visibleNextButton","visiblePrevButton","handleNextImage","handlePrevImage","undefined","SubMenu","Category","SubMenuItem","RootComponent","history","createBrowserHistory","contents","Photography","Editorial","More","selectedImageIndex","setSelectedImageIndex","photographySelectedImage","useMemo","reduce","result","concat","editorialSelectedImage","moreSelectedImage","path","category","menuTitle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68fa33dc.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  html {\n    -webkit-overflow-scrolling: touch;\n    font-size: 10px;\n    box-sizing: border-box;\n  }\n\n  html {\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n  body {\n    margin: 0;\n    -webkit-overflow-scrolling: touch;\n    font-family: -apple-system, \"Apple SD Gothic Neo\", \"Noto Sans KR\", system-ui, \"Segoe ui\", \"Roboto\", \"Helvetica Neue\", sans-serif;\n  }\n  html,\n  body,\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n  }\n  li {\n    list-style: none;\n  }\n  ul, ol {\n    margin: 0;\n    padding: 0;\n  }\n  a {\n    -webkit-text-decoration-skip: objects;\n    text-decoration: inherit;\n    color: inherit;\n  }\n  a:active,\n  a:hover {\n    outline-width: 0;\n  }\n  img,\n  video,\n  canvas {\n    max-width: 100%;\n  }\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\nexport const Header = styled.header`\n  padding: 16px;\n  display: flex;\n`;\nexport const Main = styled.div<{ margin?: number }>`\n  flex: 1;\n  ${(props) =>\n    props.margin &&\n    css`\n      margin-left: ${props.margin}px;\n    `}\n`;\n\nexport const Logo = styled.h1`\n  font-weight: normal;\n  margin-right: 16px;\n`;\n\nexport const MenuItem = styled.span<{ selected?: boolean }>`\n  ${(props) =>\n    props.selected &&\n    css`\n      color: black;\n    `}\n  cursor: pointer;\n`;\n\nexport const Nav = styled.nav`\n  flex: 1;\n  display: flex;\n  margin-left: 16px;\n  font-size: 17px;\n  line-height: 1.35;\n  letter-spacing: 0.65px;\n  color: grey;\n\n  & > ${MenuItem} + ${MenuItem} {\n    &::before {\n      content: \"/\";\n      color: grey;\n      margin: 0 4px;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Wrapper, Header, Main, Logo, Nav, MenuItem } from \"./styled\";\nimport { Link } from \"react-router-dom\";\n\nconst GlobalAppBar: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {\n  // TODO: with Router 연결후 location 보고 확인하는 걸로 변경\n  const [menu, setMenu] = React.useState<Common.MenuType | \"\">(\"\");\n  const handleLogoClick = React.useCallback(() => {\n    setMenu(\"\");\n  }, []);\n  const handlePhotographyMenuClick = React.useCallback(() => {\n    setMenu(\"Photography\");\n  }, []);\n  const handleEditorialMenuClick = React.useCallback(() => {\n    setMenu(\"Editorial\");\n  }, []);\n  const handleMoreMenuClick = React.useCallback(() => {\n    setMenu(\"More\");\n  }, []);\n\n  const photographyRef = React.useRef<HTMLAnchorElement>(null);\n  const editorialRef = React.useRef<HTMLAnchorElement>(null);\n  const moreRef = React.useRef<HTMLAnchorElement>(null);\n\n  const getMainPosition = React.useCallback(() => {\n    switch (menu) {\n      case \"Photography\":\n        return photographyRef.current?.offsetLeft;\n      case \"Editorial\":\n        return editorialRef.current?.offsetLeft;\n      case \"More\":\n        return moreRef.current?.offsetLeft;\n    }\n    return 16;\n  }, [menu, photographyRef, editorialRef, moreRef]);\n\n  return (\n    <Wrapper>\n      <Header>\n        <Logo onClick={handleLogoClick}>\n          <Link to=\"/\">Eun Ko</Link>\n        </Logo>\n        <Nav>\n          <MenuItem\n            onClick={handlePhotographyMenuClick}\n            selected={menu === \"Photography\"}\n          >\n            <Link ref={photographyRef} to=\"/photography\">\n              Photography\n            </Link>\n          </MenuItem>\n          <MenuItem\n            onClick={handleEditorialMenuClick}\n            selected={menu === \"Editorial\"}\n          >\n            <Link ref={editorialRef} to=\"/editorial\">\n              Editorial\n            </Link>\n          </MenuItem>\n          <MenuItem onClick={handleMoreMenuClick} selected={menu === \"More\"}>\n            <Link ref={moreRef} to=\"/more\">\n              And More\n            </Link>\n          </MenuItem>\n        </Nav>\n      </Header>\n      <Main margin={getMainPosition()}>{children}</Main>\n    </Wrapper>\n  );\n};\n\nexport default GlobalAppBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Main = styled.div`\n  flex: 1;\n`;\nexport const ImageWrapper = styled.div`\n  width: 500px;\n  height: 100%;\n  padding-right: 100px;\n`;\n","import styled from \"styled-components\";\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Image = styled.div`\n  object-fit: cover;\n  width: 100%;\n  height: 500px;\n  background-color: grey;\n`;\n\nexport const Content = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  margin-top: 16px;\n`;\n\nexport const LeftButton = styled.div`\n  width: 16px;\n  height: 24px;\n  background-color: grey;\n`;\nexport const RightButton = styled.div`\n  width: 16px;\n  height: 24px;\n  background-color: grey;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  position: absolute;\n  top: 0;\n  right: 0;\n  & > ${LeftButton} + ${RightButton} {\n    margin-left: 16px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-weight: normal;\n  margin-bottom: 16px;\n`;\n\nexport const Text = styled.span`\n  font-size: 15px;\n  line-height: 1.35;\n  letter-spacing: 0.65px;\n  color: grey;\n`;\n\nexport const SubTitle = styled(Text)``;\n\nexport const Date = styled(Text)``;\n\nexport const Size = styled(Text)``;\nexport const Feature = styled(Text)``;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Image,\n  Content,\n  ButtonWrapper,\n  LeftButton,\n  RightButton,\n  Title,\n  SubTitle,\n  Date,\n  Size,\n  Feature,\n} from \"./styled\";\n\ninterface IProps {\n  images?: Common.Image[];\n  handleNext?(): void;\n  handlePrev?(): void;\n}\n\nconst ImageController: React.FC<IProps> = ({\n  images,\n  handleNext,\n  handlePrev,\n}) => {\n  return (\n    <>\n      {(images || []).map((image) => (\n        <Wrapper>\n          <Image />\n          <Content>\n            <ButtonWrapper>\n              {handlePrev && <LeftButton onClick={handlePrev}></LeftButton>}\n              {handleNext && <RightButton onClick={handleNext}></RightButton>}\n            </ButtonWrapper>\n            <Title>2018. Draw Seoul. Sharing Seminar</Title>\n            <SubTitle>Seoul Metropolitan Government (Book)</SubTitle>\n            <Date>2018.06</Date>\n            <Size>150X195mm</Size>\n            <Feature>320page+Perfect Binding</Feature>\n          </Content>\n        </Wrapper>\n      ))}\n    </>\n  );\n};\n\nexport default ImageController;\n","import React from \"react\";\nimport { Wrapper, Main, ImageWrapper } from \"./styled\";\nimport Image from \"../image\";\n\ninterface IProps {\n  selectedImages: Common.Image[];\n  visibleNextButton: boolean;\n  visiblePrevButton: boolean;\n  handleNextImage?(): void;\n  handlePrevImage?(): void;\n}\nconst PageTemplate: React.FC<React.PropsWithChildren<IProps>> = ({\n  selectedImages,\n  visibleNextButton,\n  visiblePrevButton,\n  handleNextImage,\n  handlePrevImage,\n  children,\n}) => {\n  return (\n    <Wrapper>\n      <Main>{children}</Main>\n      <ImageWrapper>\n        <Image\n          images={selectedImages}\n          handleNext={visibleNextButton ? handleNextImage : undefined}\n          handlePrev={visiblePrevButton ? handlePrevImage : undefined}\n        />\n      </ImageWrapper>\n    </Wrapper>\n  );\n};\n\nexport default PageTemplate;\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router\";\nimport { createBrowserHistory, History } from \"history\";\nimport GlobalStyle from \"./globalStyle\";\nimport GlobalAppBar from \"./common/components/globalHeader\";\nimport PageTemplate from \"./common/components/pageTemplate\";\nimport styled from \"styled-components\";\n\n// TODO 컴포넌트 분리 필요\n// ASIS: 여기서 필요없는 데이터들을 다 선언함\n// TOBE: 컴포넌트를 분리시켜서 현재 탭의 데이터만 선언 하도록 함\nfunction RootComponent() {\n  const history: History = createBrowserHistory();\n\n  // TODO: s3에서 받아올 타입\n  const contents: Common.TabContent = {\n    Photography: [],\n    Editorial: [],\n    More: [],\n  };\n  const [selectedImageIndex, setSelectedImageIndex] = React.useState<number>(0);\n  const handleNextImage = React.useCallback(() => {\n    setSelectedImageIndex(selectedImageIndex + 1);\n  }, [selectedImageIndex]);\n  const handlePrevImage = React.useCallback(() => {\n    setSelectedImageIndex(selectedImageIndex - 1);\n  }, [selectedImageIndex]);\n  const photographySelectedImage = React.useMemo(\n    () =>\n      contents.Photography.reduce(\n        (result, current) => result.concat(current),\n        []\n      )[selectedImageIndex],\n    [contents.Photography, selectedImageIndex]\n  );\n  const editorialSelectedImage = React.useMemo(\n    () =>\n      contents.Editorial.reduce(\n        (result, current) => result.concat(current),\n        []\n      )[selectedImageIndex],\n    [contents.Editorial, selectedImageIndex]\n  );\n  const moreSelectedImage = React.useMemo(\n    () => contents.More.reduce((result, current) => result.concat(current), []),\n    [contents.More]\n  );\n\n  // TODO image s3에서 받아오면\n  const visibleNextButton = true;\n  const visiblePrevButton = true;\n\n  return (\n    <Router history={history}>\n      <GlobalStyle />\n      <GlobalAppBar>\n        <Switch>\n          <Route path=\"/photography\">\n            <PageTemplate\n              selectedImages={[photographySelectedImage]}\n              visibleNextButton={visibleNextButton}\n              visiblePrevButton={visiblePrevButton}\n              handleNextImage={handleNextImage}\n              handlePrevImage={handlePrevImage}\n            >\n              {() => (\n                <SubMenu>\n                  {contents.Photography.map((category) => (\n                    <Category>\n                      {category.map((image) => (\n                        <SubMenuItem>{image.menuTitle}</SubMenuItem>\n                      ))}\n                    </Category>\n                  ))}\n                </SubMenu>\n              )}\n            </PageTemplate>\n          </Route>\n          <Route path=\"/editorial\">\n            <PageTemplate\n              selectedImages={[editorialSelectedImage]}\n              visibleNextButton={visibleNextButton}\n              visiblePrevButton={visiblePrevButton}\n              handleNextImage={handleNextImage}\n              handlePrevImage={handlePrevImage}\n            >\n              {() => (\n                <SubMenu>\n                  {contents.Editorial.map((category) => (\n                    <Category>\n                      {category.map((image) => (\n                        <SubMenuItem>{image.menuTitle}</SubMenuItem>\n                      ))}\n                    </Category>\n                  ))}\n                </SubMenu>\n              )}\n            </PageTemplate>\n          </Route>\n          <Route path=\"/more\">\n            <PageTemplate\n              selectedImages={moreSelectedImage}\n              visibleNextButton={visibleNextButton}\n              visiblePrevButton={visiblePrevButton}\n              handleNextImage={handleNextImage}\n              handlePrevImage={handlePrevImage}\n            ></PageTemplate>\n          </Route>\n          <Route path=\"/\">\n            <PageTemplate\n              selectedImages={[]}\n              visibleNextButton={false}\n              visiblePrevButton={false}\n            >\n              {() => (\n                // mainContent\n                <div />\n              )}\n            </PageTemplate>\n          </Route>\n        </Switch>\n      </GlobalAppBar>\n    </Router>\n  );\n}\n\nconst SubMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Category = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst SubMenuItem = styled.div<{ selected?: boolean }>`\n  font-size: 15px;\n  line-height: 1.35;\n  letter-spacing: 0.65px;\n  color: grey;\n`;\n\nexport default RootComponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./root\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}